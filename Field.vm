function Field.new 1
push constant 7
call Memory.alloc 1
pop pointer 0
push constant 0
pop local 0
push constant 0
push constant 0
call Player.new 2
pop this 1
push constant 300
call Array.new 1
pop this 0
push constant 0
pop this 4
push constant 0
pop this 6
push constant 300
call Array.new 1
pop this 5
label WHILE_EXP0
push local 0
push constant 300
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push this 5
add
push constant 1
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
return
function Field.addExpectedBlock 0
push argument 0
pop pointer 0
push this 6
push this 5
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 6
push constant 1
add
pop this 6
push constant 0
return
function Field.clearExpectedBlock 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 5
add
pop pointer 1
push that 0
push argument 1
eq
not
not
if-goto WHILE_END0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
label WHILE_EXP1
push local 0
push constant 1
add
push this 6
lt
not
if-goto WHILE_END1
push local 0
push this 5
add
push local 0
push constant 1
add
push this 5
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto WHILE_EXP1
label WHILE_END1
push local 0
push this 5
add
push constant 1
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 6
push constant 1
add
pop this 6
push constant 0
return
function Field.checkExpectedBlocks 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 6
lt
not
if-goto WHILE_END0
push local 0
push this 5
add
pop pointer 1
push that 0
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push this 5
add
pop pointer 1
push that 0
push this 0
add
push constant 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Field.AddObject 0
push argument 0
pop pointer 0
push argument 2
push constant 20
call Math.multiply 2
push argument 1
add
push this 0
add
push argument 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 3
push constant 4
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push argument 2
push constant 20
call Math.multiply 2
push argument 1
add
call Field.addExpectedBlock 2
pop temp 0
label IF_FALSE0
push constant 0
return
function Field.clearBlock 2
push argument 0
pop pointer 0
push argument 1
push argument 1
push constant 20
call Math.divide 2
push constant 20
call Math.multiply 2
sub
push argument 1
push constant 20
call Math.divide 2
call Main.GetScreenLocation 2
pop local 1
push constant 16384
push local 1
add
pop local 0
push argument 1
push this 0
add
pop pointer 1
push that 0
push constant 4
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push argument 1
call Field.clearExpectedBlock 2
pop temp 0
label IF_FALSE0
push local 0
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 0
call Memory.poke 2
pop temp 0
push constant 0
return
function Field.canMove 4
push argument 0
pop pointer 0
push argument 2
push constant 20
call Math.multiply 2
push argument 1
add
pop local 0
push pointer 0
push local 0
push argument 3
call Field.computeNextBlock 3
pop local 1
push local 1
push local 1
push constant 20
call Math.divide 2
push constant 20
call Math.multiply 2
sub
pop local 2
push local 1
push constant 20
call Math.divide 2
pop local 3
push local 0
push this 0
add
pop pointer 1
push that 0
push constant 1
eq
push argument 1
push constant 0
lt
or
push argument 1
push constant 19
gt
or
push argument 2
push constant 0
lt
or
push argument 2
push constant 14
gt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push local 0
push this 0
add
pop pointer 1
push that 0
push constant 2
eq
push local 2
push constant 0
lt
push local 2
push constant 19
gt
or
push local 3
push constant 14
gt
or
push local 3
push constant 0
lt
or
push local 1
push this 0
add
pop pointer 1
push that 0
push constant 1
eq
or
push local 1
push this 0
add
pop pointer 1
push that 0
push constant 2
eq
or
push local 1
push this 0
add
pop pointer 1
push that 0
push constant 4
eq
or
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
push this 0
add
pop pointer 1
push that 0
push constant 4
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
not
pop this 4
goto IF_END2
label IF_FALSE2
push constant 0
return
label IF_END2
label IF_FALSE1
push constant 0
not
return
function Field.computeNextBlock 1
push argument 0
pop pointer 0
push argument 2
push constant 87
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push constant 20
sub
pop local 0
label IF_FALSE0
push argument 2
push constant 65
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 1
push constant 1
sub
pop local 0
label IF_FALSE1
push argument 2
push constant 83
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 1
push constant 20
add
pop local 0
label IF_FALSE2
push argument 2
push constant 68
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push argument 1
push constant 1
add
pop local 0
label IF_FALSE3
push local 0
return
function Field.move 3
push argument 0
pop pointer 0
push this 1
call Player.X 1
pop local 0
push this 1
call Player.Y 1
pop local 1
push argument 1
push constant 87
eq
push pointer 0
push local 0
push local 1
push constant 1
sub
push argument 1
call Field.canMove 4
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 1
push constant 1
neg
call Player.Yplus 2
pop local 2
push this 1
call Player.Y 1
push constant 1
sub
push constant 20
call Math.multiply 2
push this 1
call Player.X 1
add
pop this 3
label IF_FALSE0
push argument 1
push constant 65
eq
push pointer 0
push local 0
push constant 1
sub
push local 1
push argument 1
call Field.canMove 4
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 1
push constant 1
neg
call Player.Xplus 2
pop local 2
push this 1
call Player.Y 1
push constant 20
call Math.multiply 2
push this 1
call Player.X 1
add
push constant 1
sub
pop this 3
label IF_FALSE1
push argument 1
push constant 83
eq
push pointer 0
push local 0
push local 1
push constant 1
add
push argument 1
call Field.canMove 4
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 1
push constant 1
call Player.Yplus 2
pop local 2
push this 1
call Player.Y 1
push constant 1
add
push constant 20
call Math.multiply 2
push this 1
call Player.X 1
add
pop this 3
label IF_FALSE2
push argument 1
push constant 68
eq
push pointer 0
push local 0
push constant 1
add
push local 1
push argument 1
call Field.canMove 4
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 1
push constant 1
call Player.Xplus 2
pop local 2
push this 1
call Player.Y 1
push constant 20
call Math.multiply 2
push this 1
call Player.X 1
add
push constant 1
add
pop this 3
label IF_FALSE3
push local 2
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 1
push constant 20
call Math.multiply 2
push local 0
add
push this 0
add
push this 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 1
call Player.Y 1
push constant 20
call Math.multiply 2
push this 1
call Player.X 1
add
push this 0
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push this 3
push this 0
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push this 3
call Field.redraw 2
pop temp 0
push constant 0
pop this 2
goto IF_END5
label IF_FALSE5
push this 1
call Player.Y 1
push constant 20
call Math.multiply 2
push this 1
call Player.X 1
add
push this 0
add
pop pointer 1
push that 0
pop this 2
label IF_END5
push this 1
call Player.Y 1
push constant 20
call Math.multiply 2
push this 1
call Player.X 1
add
push this 0
add
push constant 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push local 1
push constant 20
call Math.multiply 2
push local 0
add
call Field.redraw 2
pop temp 0
push pointer 0
push this 1
call Player.Y 1
push constant 20
call Math.multiply 2
push this 1
call Player.X 1
add
call Field.redraw 2
pop temp 0
label IF_FALSE4
push constant 0
return
function Field.draw 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 300
lt
not
if-goto WHILE_END0
push pointer 0
push local 0
call Field.redraw 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Field.redraw 0
push argument 0
pop pointer 0
push argument 1
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push argument 1
call Field.clearBlock 2
pop temp 0
push pointer 0
call Field.checkExpectedBlocks 1
pop temp 0
label IF_FALSE0
push argument 1
push this 0
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 1
push argument 1
push constant 20
call Math.divide 2
push constant 20
call Math.multiply 2
sub
push argument 1
push constant 20
call Math.divide 2
call Wall.draw 2
pop temp 0
label IF_FALSE1
push argument 1
push this 0
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 1
push argument 1
push constant 20
call Math.divide 2
push constant 20
call Math.multiply 2
sub
push argument 1
push constant 20
call Math.divide 2
call Box.draw 2
pop temp 0
label IF_FALSE2
push argument 1
push this 0
add
pop pointer 1
push that 0
push constant 3
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 1
push argument 1
push argument 1
push constant 20
call Math.divide 2
push constant 20
call Math.multiply 2
sub
call Player.setX 2
pop temp 0
push this 1
push argument 1
push constant 20
call Math.divide 2
call Player.setY 2
pop temp 0
push this 1
call Player.draw 1
pop temp 0
label IF_FALSE3
push argument 1
push this 0
add
pop pointer 1
push that 0
push constant 4
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push argument 1
push argument 1
push constant 20
call Math.divide 2
push constant 20
call Math.multiply 2
sub
push argument 1
push constant 20
call Math.divide 2
call ExpectedBox.draw 2
pop temp 0
label IF_FALSE4
push constant 0
return
function Field.clearField 1
push argument 0
pop pointer 0
push constant 0
pop this 2
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 300
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push local 0
call Field.clearBlock 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
